#include <ESP8266WiFi.h>
#include <PubSubClient.h>
#include<SoftwareSerial.h>
#include <TinyGPS.h>
TinyGPS gps;
SoftwareSerial ss(D3, D0);
float flat, flon;
unsigned long age;
String buf;
// Update these with values suitable for your network.
const char* ssid = "Ragavendhar";
const char* password = "18021998";
const char* mqtt_server = 
int value = 0;
void setup_wifi() {
 delay(100);
 // We start by connecting to a WiFi network
 Serial.print("Connecting to ");
 Serial.println(ssid);
 WiFi.begin(ssid, password);
 while (WiFi.status() != WL_CONNECTED)
 {
 delay(500);
 Serial.print(".");
 }
 randomSeed(micros());
 Serial.println("");
 Serial.println("WiFi connected");
 Serial.println("IP address: ");
 Serial.println(WiFi.localIP());
}
void reconnect() {
8
 // Loop until we're reconnected
 while (!client.connected())
 {
 Serial.print("Attempting MQTT connection...");
 // Create a random client ID
 String clientId = "aac";
 clientId += String(random(0xffff), HEX);
 // Attempt to connect
 //if you MQTT broker has clientID,username and password
 //please change following line to if (client.connect(clientId,userName,passWord))
 if (client.connect(clientId.c_str()))
 {
 Serial.println("connected");
 //once connected to MQTT broker, subscribe command if any
 client.subscribe("aac/test");
 } else {
 Serial.print("failed, rc=");
 Serial.print(client.state());
 Serial.println(" try again in 5 seconds");
9
 // Wait 6 seconds before retrying
 delay(6000);
 }
 }
} //end reconnect()
void setup() {
 Serial.begin(115200);
 ss.begin(9600);
 setup_wifi();
 client.setServer(mqtt_server, 1883);
 pinMode(LED_BUILTIN, OUTPUT);
}
void loop() {
 bool newData = false;
 unsigned long chars;
 unsigned short sentences, failed;
 for (unsigned long start = millis(); millis() - start < 1000;)
 {
 while (ss.available())
 {
10
 char c = ss.read();
 //Serial.write(c); // uncomment this line if you want to see the GPS data flowing
delay(1000);
 if (gps.encode(c))
 {
 newData = true;
 } } }
 if (newData)
 {
 gps.f_get_position(&flat, &flon, &age);}
 //buf = F("lat:");
 buf = String(flat, 6);
 buf += F(",");
 //buf += F("\nlon:");
 buf += String(flon, 6);
 if (!client.connected()) {
 reconnect();}
 client.loop();
 long now = millis();
 if (now - lastMsg > 5000) {
11
 lastMsg = now;
char charBuf[50];
buf.toCharArray(charBuf, 50);
client.publish("aac2", charBuf);
Serial.print("LOCATION= ");
Serial.println(charBuf);
 buf="";}}
